# docker-compose.yml
version: '3.8'
services:
  mysql:
    image: mysql:8.0
    restart: on-failure
    container_name: ${APP_NAME:?err}_mysql
    volumes:
      - ${PWD}
#      - '.docker/data/db:/var/lib/mysql'
      - './apps/data/:/var/lib/mysql'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_DATABASE}
    networks:
      testing_net:
        ipv4_address: 10.28.2.1

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: on-failure
    user: ${LOCAL_USER}
    container_name: ${APP_NAME:?err}_php
    volumes:
      - './apps/manasoft/:/usr/src/app'
    depends_on:
      - mysql
    networks:
      testing_net:
        ipv4_address: 10.28.2.2

  # http://localhost/
  nginx:
    image: nginx:1.19.0-alpine
    restart: on-failure
    depends_on:
      - php
    container_name: ${APP_NAME:?err}_nginx
    volumes:
      - './apps/manasoft/public/:/usr/src/app'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '${NGINX_PORT}:80'
    networks:
      testing_net:
        ipv4_address: 10.28.2.3

  # http://localhost:8080/
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME:?err}_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - 8080:80
    links:
      - mysql
    networks:
      testing_net:
        ipv4_address: 10.28.2.4

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 10.28.2.0/8
